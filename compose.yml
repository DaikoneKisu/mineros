services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    env_file: .env
    depends_on:
      betaso-database:
        condition: service_healthy
      mineros-database:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: src/mineros
          target: /mineros/src/mineros
          ignore:
            - __pycache__
        - action: rebuild
          path: pyproject.toml
        - action: rebuild
          path: uv.lock
  betaso-database:
    build:
      context: .
      dockerfile: betaso-database.Dockerfile
    restart: always
    ports:
      - ${BETASO_PGPORT}:${BETASO_PGPORT}
    volumes:
      - betaso-database-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${BETASO_POSTGRES_USER}
      - POSTGRES_PASSWORD=${BETASO_POSTGRES_PASSWORD}
      - POSTGRES_DB=${BETASO_POSTGRES_DB}
      - PGPORT=${BETASO_PGPORT}
    healthcheck:
      test: ["CMD-SHELL", "psql -d $${POSTGRES_DB} -U $${POSTGRES_USER} -c 'SELECT * FROM betaso_init' || exit 1"]
      interval: 5m
      retries: 0
      start_period: 5m
      start_interval: 10s
  mineros-database:
    shm_size: 8g
    image: postgres:alpine
    restart: always
    ports:
      - ${MINEROS_PGPORT}:${MINEROS_PGPORT}
    volumes:
      - mineros-database-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${MINEROS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${MINEROS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${MINEROS_POSTGRES_DB}
      - PGPORT=${MINEROS_PGPORT}
    healthcheck:
      test: ["CMD-SHELL", "psql -d $${POSTGRES_DB} -U $${POSTGRES_USER} -c 'SELECT 1' || exit 1"]
      interval: 5m
      retries: 0
      start_period: 5m
      start_interval: 10s
volumes:
  betaso-database-volume:
  mineros-database-volume: